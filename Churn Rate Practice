WITH months AS 
(SELECT 
'2017-01-01' as first_day,
'2017-01-31' as last_day
UNION
SELECT '2017-02-01' as first_day,
'2017-02-28' as last_day
UNION SELECT '2017-03-01' as first_day,
'2017-03-31' as last_day),

cross_join AS
(SELECT *
FROM subscriptions
CROSS JOIN months),

status as 
(SELECT id, first_day as 'month',
CASE 
  WHEN (subscription_start < first_day) and (subscription_end > first_day or subscription_end is null) and (segment=87 )
THEN 1
ELSE 0
END AS is_active_87,
CASE 
  WHEN (subscription_start < first_day) and (subscription_end >first_day or subscription_end is null) and (segment =30)
THEN 1
ELSE 0
END AS is_active_30,
CASE
  WHEN (subscription_end between first_day and last_day) AND segment = 87
  THEN 1
  ELSE 0
  END AS is_canceled_87,
CASE
  WHEN (subscription_end between first_day and last_day) AND segment = 30
  THEN 1
  ELSE 0
  END AS is_canceled_30
FROM cross_join),

status_aggregate as
  (SELECT month, SUM(is_active_87) as sum_active_87,
  SUM(is_active_30)as sum_active_30,
  SUM(is_canceled_87) as sum_canceled_87,
  SUM(is_canceled_30) as sum_canceled_30
  FROM status GROUP BY month)
  
SELECT month, 1.0 * sum_canceled_87/sum_active_87 as 'churn rate for 87', 
1.0 * sum_canceled_30/sum_active_30 as 'churn rate for 30' FROM status_aggregate;










